from sklearn.ensemble import RandomForestClassifier


if __name__ == '__main__':
    dataset = [...]
    col_index = int(input())
    dataset1 = list()
    for row in dataset:
        sample = [row[i] for i in range(len(row)) if i != col_index]
        dataset1.append(sample)

    train_set = dataset1[:int(0.85 * len(dataset1))]
    train_x = [t[:-1] for t in train_set]
    train_y = [t[-1] for t in train_set]

    test_set = dataset1[int(0.85 * len(dataset1)):]
    test_x = [t[:-1] for t in test_set]
    test_y = [t[-1] for t in test_set]

    drva = int(input())
    kriteria = input()
    classifier = RandomForestClassifier(n_estimators=drva, criterion=kriteria, random_state=0)
    classifier.fit(train_x, train_y)

    correct_samples = 0
    for x, y in zip(test_x, test_y):
        y_predicted = classifier.predict([x])[0]
        if y_predicted == y:
            correct_samples += 1

    print(f'Accuracy: {correct_samples / len(test_set)}')

    vlez = [el for el in input().split(' ')]
    pom = [vlez[i] for i in range(0,len(vlez)) if i!=col_index]
    temp = classifier.predict([pom])
    strings = [str(integer) for integer in temp]
    a_string = "".join(strings)
    print(a_string)
    temp1 = classifier.predict_proba([pom])
    strings1 = [str(integer) for integer in temp1]
    a_string1 = "".join(strings1)
    print(a_string1)
